{"version":3,"file":"static/js/541.3ea83420.chunk.js","mappings":"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","sources":["components/FiltersForm/FiltersForm.styled.jsx","components/FiltersForm/FiltersForm.jsx","pages/Catalog.jsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport { commonInputStyles } from \"components/Modal/BookForm/BookForm.styled\";\nimport { RedButtonStyles } from \"components/AdvertCard/AdvertCard.styled\";\n\nconst commonRadioCheckbox = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 500;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  border: 1px solid var(--border-color);\n  padding: 10px;\n  color: var(--text-color);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 14px;\n    padding: 17px;\n  }\n`;\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  padding: 50px 0;\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n  }\n`;\n\nexport const FormFilters = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-top: 30px;\n`;\n\nexport const GoToPrevPageBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: -50px;\n  align-self: flex-start;\n`;\n\nexport const LabelLocation = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--light-text);\n\n  svg {\n    position: absolute;\n    top: 45px;\n    left: 15px;\n    fill: none;\n    stroke: var(--text-color);\n  }\n\n  .react-dropdown-select {\n    ${commonInputStyles}\n    padding: 15px;\n    padding-left: 40px;\n    opacity: 1;\n    color: var(--light-text);\n    transition: box-shadow var(--linear-transition);\n\n    &:focus-within {\n      box-shadow: 0 0 5px var(--accent-red);\n    }\n\n    svg {\n      display: none;\n    }\n  }\n\n  .react-dropdown-select-dropdown {\n    width: 100%;\n    background-color: var(--input-background);\n    border-radius: 10px;\n    border: 2px solid var(--accent-red);\n  }\n\n  .react-dropdown-select-item {\n    border-bottom: 1px solid var(--light-text);\n\n    &:hover:not(.react-dropdown-select-item-selected) {\n      color: var(--white);\n      background-color: var(--accent-red);\n      opacity: 0.7;\n    }\n  }\n\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    color: var(--white);\n    font-weight: bold;\n    background-color: var(--accent-red);\n  }\n`;\n\nexport const FiltersWrap = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--light-text);\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const LabelFilters = styled.label`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  color: var(--text-color);\n\n  hr {\n    opacity: 0.3;\n    background-color: var(--border-color);\n    display: block;\n    margin: 24px 0;\n  }\n`;\n\nexport const FieldSet = styled.fieldset`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  border: none;\n  padding: 0;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: calc((100% - 2 * 10px) / 3);\n  height: 85px;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 4 * 10px) / 5);\n    height: 95px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100% - 2 * 10px) / 3);\n    height: 95px;\n  }\n\n  input {\n    width: 130px;\n    height: 80px;\n    padding: 15px;\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n\n    &:checked + div {\n      border-color: var(--accent-red);\n    }\n  }\n`;\n\nexport const RadioBtn = styled.div`\n  ${commonRadioCheckbox}\n`;\n\nexport const CheckBox = styled.div`\n  ${commonRadioCheckbox}\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    ${RedButtonStyles}\n    width: 150px;\n\n    @media screen and (min-width: 1440px) {\n      margin: unset;\n    }\n  }\n\n  #reset-button {\n    background-color: var(--grey);\n    color: var(--light-text);\n    width: 150px;\n\n    @media screen and (min-width: 1440px) {\n      &:hover,\n      &:focus {\n        background-color: var(--input-background);\n        color: var(--light-text);\n      }\n    }\n  }\n`;\n","import { useState, useRef } from \"react\";\nimport Select from \"react-dropdown-select\";\nimport { LOCATION_OPTIONS, FILTERS_TYPE, FILTERS_EQUIPMENT } from \"constants\";\nimport { gerAllSearchParams, smoothScrollToTarget } from \"helpers\";\nimport { LocationIcon } from \"components/icons\";\nimport {\n  FiltersWrap,\n  FormFilters,\n  LabelFilters,\n  LabelLocation,\n  RadioBtn,\n  CheckBox,\n  FieldSet,\n  InputWrap,\n  ButtonsWrap,\n} from \"./FiltersForm.styled\";\n\nconst FiltersForm = ({ setPage, searchParams, setSearchParams }) => {\n  const [filterParams, setFilterParams] = useState({});\n  const checkbox = useRef(null);\n  const dropdownRef = useRef(null);\n\n  const params = {};\n  gerAllSearchParams(searchParams, params);\n\n  const handleFilterAdverts = (e) => {\n    e.preventDefault();\n    setSearchParams({});\n    setPage(1);\n    setSearchParams({ ...filterParams });\n    smoothScrollToTarget(\"advertBlock\");\n  };\n\n  const resetFilters = () => {\n    [...checkbox.current?.elements].forEach((input) => {\n      if (input.type === \"checkbox\" || input.type === \"radio\") {\n        input.checked = false;\n      }\n    });\n\n    dropdownRef.current?.clearAll();\n    setSearchParams({});\n    setFilterParams({});\n  };\n\n  return (\n    <FormFilters onSubmit={handleFilterAdverts} ref={checkbox}>\n      <LabelLocation>\n        Location\n        <Select\n          ref={dropdownRef}\n          placeholder=\"Location\"\n          options={LOCATION_OPTIONS}\n          onChange={(arr) => {\n            if (arr.length > 0) {\n              setFilterParams((prev) => ({ ...prev, location: arr[0].value }));\n            }\n          }}\n          closeOnScroll={true}\n          color=\"var(--accent-red)\"\n        />\n        <LocationIcon width={20} height={20} />\n      </LabelLocation>\n\n      <FiltersWrap>\n        Filters\n        <LabelFilters>\n          Vehicle equipment\n          <hr />\n          <FieldSet>\n            {FILTERS_EQUIPMENT.map(({ name, value, icon: Icon, text }, i) => (\n              <InputWrap key={`${text}/${i}`}>\n                <input\n                  type=\"checkbox\"\n                  name={name}\n                  value={value}\n                  onChange={({ target }) => {\n                    if (target.checked) {\n                      setFilterParams((prev) => ({\n                        ...prev,\n                        [target.name]: target.value,\n                      }));\n                    } else {\n                      setFilterParams((prev) => {\n                        const { [target.name]: removedParam, ...rest } = prev;\n                        return { ...rest };\n                      });\n                    }\n                  }}\n                />\n                <CheckBox>\n                  <Icon width={20} height={20} size={20} /> {text}\n                </CheckBox>\n              </InputWrap>\n            ))}\n          </FieldSet>\n        </LabelFilters>\n        <LabelFilters>\n          Vehicle type\n          <hr />\n          <FieldSet>\n            {FILTERS_TYPE.map(({ value, icon: Icon, text }, i) => (\n              <InputWrap key={`${text}/${i}`}>\n                <input\n                  type=\"radio\"\n                  name=\"type\"\n                  value={value}\n                  onChange={({ target }) =>\n                    setFilterParams((prev) => ({\n                      ...prev,\n                      form: target.value,\n                    }))\n                  }\n                />\n                <RadioBtn>\n                  <Icon width={20} height={20} /> {text}\n                </RadioBtn>\n              </InputWrap>\n            ))}\n          </FieldSet>\n        </LabelFilters>\n      </FiltersWrap>\n\n      <ButtonsWrap>\n        <button type=\"submit\">Search</button>\n        <button\n          id=\"reset-button\"\n          type=\"button\"\n          aria-label=\"Reset filter fields\"\n          onClick={resetFilters}\n        >\n          Reset\n        </button>\n      </ButtonsWrap>\n    </FormFilters>\n  );\n};\n\nexport default FiltersForm;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { getAllAdverts, getTotal } from \"../redux/adverts/operations\";\nimport {\n  selectAdverts,\n  selectError,\n  selectIsLoading,\n  selectTotal,\n} from \"../redux/adverts/selectors\";\nimport { LIMIT } from \"constants\";\nimport { smoothScrollToTarget } from \"helpers\";\nimport { MainContainer } from \"layouts/MainContainer\";\nimport FiltersForm from \"components/FiltersForm\";\nimport Loader from \"components/Loader\";\nimport AdvertCard from \"components/AdvertCard\";\nimport {\n  AdvertsList,\n  CardItem,\n  ListBtnWrap,\n  LoadMoreBtn,\n  NoItemsMsg,\n} from \"components/AdvertCard/AdvertCard.styled\";\nimport {\n  CatalogContainer,\n  GoToPrevPageBtn,\n} from \"components/FiltersForm/FiltersForm.styled\";\n\nconst Catalog = () => {\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [showLoadMore, setShowLoadMore] = useState(true);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const adverts = useSelector(selectAdverts);\n  const total = useSelector(selectTotal);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    setShowLoadMore(true);\n\n    if (page >= Math.ceil(total / LIMIT)) {\n      setShowLoadMore(false);\n    }\n\n    dispatch(getTotal(searchParams));\n    dispatch(getAllAdverts({ page, limit: LIMIT, searchParams }));\n  }, [dispatch, page, total, searchParams]);\n\n  const handleLoadMore = () => {\n    if (page >= Math.ceil(total / LIMIT) || adverts.length < LIMIT) {\n      setShowLoadMore(false);\n      return;\n    }\n\n    setShowLoadMore(true);\n    setPage((prev) => prev + 1);\n    smoothScrollToTarget(\"goBack\");\n  };\n\n  return (\n    <>\n      <MainContainer>\n        <CatalogContainer>\n          <FiltersForm\n            setPage={setPage}\n            searchParams={searchParams}\n            setSearchParams={setSearchParams}\n          />\n\n          {page > 1 && (\n            <GoToPrevPageBtn\n              id=\"goBack\"\n              type=\"button\"\n              onClick={() => {\n                setPage((prev) => prev - 1);\n                smoothScrollToTarget(\"advertBlock\");\n              }}\n            >\n              <FaArrowLeft size={20} fill=\"var(--accent-color)\" />\n              Go back\n            </GoToPrevPageBtn>\n          )}\n\n          <ListBtnWrap id=\"advertBlock\">\n            {adverts.length < 0 || error === \"Not found\" ? (\n              <NoItemsMsg>No items</NoItemsMsg>\n            ) : (\n              <AdvertsList>\n                {adverts.map((card) => (\n                  <CardItem key={card._id}>\n                    <AdvertCard card={card} />\n                  </CardItem>\n                ))}\n              </AdvertsList>\n            )}\n\n            {showLoadMore && !error && adverts.length > 0 && (\n              <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n                Load more\n              </LoadMoreBtn>\n            )}\n          </ListBtnWrap>\n        </CatalogContainer>\n      </MainContainer>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["commonRadioCheckbox","css","_templateObject","_taggedTemplateLiteral","CatalogContainer","styled","_templateObject2","FormFilters","_templateObject3","GoToPrevPageBtn","_templateObject4","LabelLocation","_templateObject5","commonInputStyles","FiltersWrap","_templateObject6","LabelFilters","_templateObject7","FieldSet","_templateObject8","InputWrap","_templateObject9","RadioBtn","_templateObject10","CheckBox","_templateObject11","ButtonsWrap","_templateObject12","RedButtonStyles","_ref","setPage","searchParams","setSearchParams","_useState","useState","_useState2","_slicedToArray","filterParams","setFilterParams","checkbox","useRef","dropdownRef","gerAllSearchParams","_jsxs","onSubmit","e","preventDefault","_objectSpread","smoothScrollToTarget","ref","children","_jsx","Select","placeholder","options","LOCATION_OPTIONS","onChange","arr","length","prev","location","value","closeOnScroll","color","LocationIcon","width","height","FILTERS_EQUIPMENT","_ref2","i","name","Icon","icon","text","type","_ref3","target","checked","_defineProperty","_target$name","rest","_objectWithoutProperties","map","_toPropertyKey","size","concat","FILTERS_TYPE","_ref4","_ref5","form","id","onClick","_checkbox$current","_dropdownRef$current","_toConsumableArray","current","elements","forEach","input","clearAll","page","_useSearchParams","useSearchParams","_useSearchParams2","_useState3","_useState4","showLoadMore","setShowLoadMore","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","adverts","selectAdverts","total","selectTotal","error","selectError","useEffect","Math","ceil","LIMIT","getTotal","getAllAdverts","limit","_Fragment","MainContainer","FiltersForm","FaArrowLeft","fill","ListBtnWrap","NoItemsMsg","AdvertsList","card","CardItem","AdvertCard","_id","LoadMoreBtn","Loader"],"sourceRoot":""}